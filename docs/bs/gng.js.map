{"version":3,"file":"gng.js","sourceRoot":"","sources":["../../code/web/web_audio.ts","../../code/web/shaders/test_vertex.ts","../../code/web/webgl_renderer.ts","../../code/web/web_platform.ts","../../code/web/shaders/sprite_shader.ts"],"names":[],"mappings":";AAAA,MAAM,QAAQ;IAAd;QAEW,qBAAgB,GAAW,CAAC,CAAC;QAC7B,aAAQ,GAAiB,IAAI,CAAC;QAC9B,oBAAe,GAAW,GAAG,CAAC;QAE9B,YAAO,GAAY,KAAK,CAAC;QAEzB,aAAQ,GAAW,GAAG,CAAC;QACvB,4BAAuB,GAAW,GAAG,CAAC;IAyDjD,CAAC;IAvDU,IAAI;QACP,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,aAAa;QAChB,IAAI,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QACvC,OAAO,aAAa,CAAC,UAAU,CAAC;IACpC,CAAC;IAEM,WAAW,CAAE,OAAgB,EAAE,MAAkB;QACpD,IAAI,gBAAgB,GAAW,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QACzD,IAAI,cAAc,GAAG,IAAI,GAAE,MAAM,CAAC;QAClC,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9D,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;QACtC,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,EAAE,EAAE,CAAC,EAAE,CAAC;YAC3C,IAAI,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,GAAG,gBAAgB,CAAC;YAC3E,IAAI,oBAAoB,GAAG,cAAc,GAAG,UAAU,GAAG,mBAAmB,EAAE,CAAC;gBAE3E,IAAI,UAAU,GAAG,OAAO,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;gBACzD,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC;oBAClB,OAAO;gBACX,CAAC;gBAED,IAAI,WAAW,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;gBAC1E,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC9E,IAAI,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,UAAU,EAAE,EAAE,WAAW,EAAE,CAAC;oBAChE,MAAM,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC;gBACnD,CAAC;gBAED,IAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;gBAC1D,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACpD,gBAAgB,CAAC,MAAM,GAAG,MAAM,CAAC;gBAEjC,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,GAAG,cAAc,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBACzF,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAEjC,IAAI,CAAC,uBAAuB,GAAG,QAAQ,GAAG,UAAU,CAAC;YACzD,CAAC;iBACI,CAAC;gBACF,MAAM;YACV,CAAC;QACL,CAAC;IACL,CAAC;IAEM,qBAAqB;QACxB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,WAAW,EAAE,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;CACJ;AClED,IAAI,kBAAkB,GAAG;;;;;;;;;;;;;;;;;;;;;;EAsBvB,CAAC;AAGH,IAAI,oBAAoB,GAAG;;;;;;;EAOzB,CAAC;AChCH,8CAA8C;AAE9C,MAAM,aAAa;IAAnB;QACW,iBAAY,GAAgB,IAAI,CAAC;QACjC,mBAAc,GAAgB,IAAI,CAAC;QACnC,YAAO,GAAiB,IAAI,CAAC;IACxC,CAAC;CAAA;AAED,MAAM,aAAa;IAAnB;QACW,WAAM,GAAsB,IAAI,CAAC;QACjC,cAAS,GAA0B,IAAI,CAAC;QAExC,eAAU,GAAa,IAAI,CAAC;QAE5B,iBAAY,GAAkB,IAAI,CAAC;QACnC,uBAAkB,GAAgB,IAAI,CAAC;QACvC,sBAAiB,GAAgB,IAAI,CAAC;QAEtC,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAAW,CAAC,CAAC;QAEzB,aAAQ,GAAmB,EAAE,CAAC;QAC9B,iBAAY,GAAuB,EAAE,CAAC;QAEtC,6BAAwB,GAAW,CAAC,CAAC;QACrC,+BAA0B,GAAW,CAAC,CAAC;QACvC,4BAAuB,GAA6B,EAAE,CAAC;QACvD,2BAAsB,GAAa,EAAE,CAAC,CAAC,iCAAiC;IACnF,CAAC;CAAA;AAED,IAAI,IAAI,GAAkB,IAAI,aAAa,EAAE,CAAC;AAC9C,IAAI,eAAe,GAAW,KAAK,CAAC;AAEpC,SAAS,oBAAoB,CAAE,EAAyB,EACzB,kBAA0B,EAC1B,oBAA4B;IAEvD,IAAI,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;IAEjC,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IACxD,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;IACzD,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACtC,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QACtD,OAAO;IACX,CAAC;IAED,MAAM,CAAC,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;IAC5D,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE,oBAAoB,CAAC,CAAC;IAC7D,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IACxC,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;QACxD,OAAO;IACX,CAAC;IAED,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;IACpC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IACrD,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;IACvD,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAE/B,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;QAClD,OAAO;IACX,CAAC;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,kBAAkB,CAAE,EAAyB,EAAE,IAAc;IAClE,IAAI,UAAU,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,MAAM,GAAgB,EAAE,CAAC,YAAY,EAAE,CAAC;IAC5C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IACvC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;IAC3D,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,iBAAiB,CAAE,EAAyB,EAAE,IAAc;IACjE,IAAI,SAAS,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,IAAI,MAAM,GAAgB,EAAE,CAAC,YAAY,EAAE,CAAC;IAC5C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;IAC/C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;IAClE,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,SAAS,CAAE,MAAyB,EAAE,MAAkB;IAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACrB,IAAI,CAAC,SAAS,GAA0B,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IAEtG,IAAI,CAAC,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAE9C,IAAI,EAAE,GAA0B,IAAI,CAAC,SAAS,CAAC;IAC/C,4CAA4C;IAC5C,EAAE,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;IAC5C,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC,EAAE,EAAE,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;IAE3F,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;IAC5C,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACxD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,GAAG,eAAe,GAAG,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;IAEzE,IAAI,OAAO,GAAa,EAAE,CAAC;IAC3B,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,eAAe,EAAE,WAAW,EAAE,EAAE,CAAC;QACrE,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACzD,CAAC;IACD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;AAC5D,CAAC;AAED,SAAS,WAAW,CAAC,WAAmB,EAAE,YAAoB;IAC1D,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAC/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACrC,CAAC;AAED,SAAS,kBAAkB;IACvB,IAAI,EAAE,GAA0B,IAAI,CAAC,SAAS,CAAC;IAC/C,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACvD,2BAA2B;IAC3B,0BAA0B;IAC1B,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACrC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,GAAG,EAAE,CAAC,gBAAgB,CAAC,CAAC;IAEpD,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IACpB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;AACvD,CAAC;AAED,SAAS,gBAAgB,CAAE,EAAU,EAAE,KAAa,EAAE,MAAc,EAAE,YAAoB;IACtF,IAAI,EAAE,GAA0B,IAAI,CAAC,SAAS,CAAC;IAC/C,IAAI,OAAO,GAAiB,EAAE,CAAC,aAAa,EAAE,CAAC;IAC/C,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAE,EAAE,CAAC;QAAC,MAAM,CAAC,CAAC;IAAC,CAAC;IAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAE5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;IAExC,IAAI,SAAS,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;IAEzF,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IACvC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;IACjG,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;IAClE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;IAClE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;IACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;AACzE,CAAC;AAED,SAAS,qBAAqB;IAC1B,IAAI,EAAE,GAA0B,IAAI,CAAC,SAAS,CAAC;IAE/C,IAAI,OAAO,GAAiB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;IACtD,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAEvB,IAAI,cAAc,GAAyB,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IAC9F,EAAE,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/C,IAAI,eAAe,GAAyB,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;IAChG,EAAE,CAAC,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAEjD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACxD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAE/D,IAAI,gBAAgB,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5D,EAAE,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;IAC7C,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAEpE,IAAI,gBAAgB,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAClE,EAAE,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;IAC7C,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAErE,IAAI,kBAAkB,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAChE,EAAE,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,CAAC;IAC/C,EAAE,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAEvE,IAAI,gBAAgB,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAClE,EAAE,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;IAC7C,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACzE,CAAC;AAED,SAAS,qBAAqB,CAAE,aAAqB,EAAE,iBAAyB,EAAE,UAAkB,EACpE,eAAuB,EAAE,UAAkB,EAAE,WAAmB;IAE5F,IAAI,EAAE,GAA0B,IAAI,CAAC,SAAS,CAAC;IAC/C,IAAI,OAAO,GAAiB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;IAEtD,IAAI,QAAQ,GAAG,iBAAiB,GAAG,CAAC,UAAU,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtD,IAAI,YAAY,GAAG,eAAe,GAAG,UAAU,GAAG,CAAC,CAAC;IAEpD,IAAI,iBAAiB,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC1F,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;IAEnE,IAAI,kBAAkB,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IAC1F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC;QACnC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAClC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAEvC,IAAI,eAAe,GAAG,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;QAEjC,IAAI,mBAAmB,GAAG,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;QACjF,EAAE,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,CAAC;IACD,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,iBAAiB,GAAG,CAAC,EAAE,EAAE,CAAC,cAAc,EAAE,eAAe,GAAG,CAAC,CAAC,CAAC;AACjG,CAAC;AC3MD,yCAAyC;AAEzC,IAAI,WAAW,GAAgB,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;AACxD,IAAI,WAAW,GAAgB,IAAI,WAAW,EAAE,CAAC;AAEjD,MAAM,OAAO;IAAb;QACI,aAAQ,GAAqB,IAAI,CAAC;QAClC,cAAS,GAAqB,IAAI,CAAC;QAEnC,+BAA0B,GAAqB,IAAI,CAAC;QACpD,+BAA0B,GAAqB,IAAI,CAAC;QACpD,oCAA+B,GAAqB,IAAI,CAAC;QACzD,uCAAkC,GAAqB,IAAI,CAAC;QAC5D,kCAA6B,GAAqB,IAAI,CAAC;QACvD,sCAAiC,GAAqB,IAAI,CAAC;QAC3D,mCAA8B,GAAqB,IAAI,CAAC;QACxD,iCAA4B,GAAqB,IAAI,CAAC;QACtD,0CAAqC,GAAqB,IAAI,CAAC;QAE/D,kBAAa,GAAqB,IAAI,CAAC;QACvC,2BAAsB,GAAqB,IAAI,CAAC;QAEhD,iBAAY,GAAqB,IAAI,CAAC;QACtC,eAAU,GAAqB,IAAI,CAAC;QACpC,eAAU,GAAqB,IAAI,CAAC;QACpC,wBAAmB,GAAqB,IAAI,CAAC;QAC7C,eAAU,GAAqB,IAAI,CAAC;QAEpC,aAAQ,GAAqB,IAAI,CAAC;QAClC,gBAAW,GAAqB,IAAI,CAAC;QACrC,cAAS,GAAqB,IAAI,CAAC;QACnC,gBAAW,GAAqB,IAAI,CAAC;QAErC,oBAAe,GAAqB,IAAI,CAAC;QACzC,kBAAa,GAAqB,IAAI,CAAC;QACvC,mBAAc,GAAqB,IAAI,CAAC;QACxC,iBAAY,GAAqB,IAAI,CAAC;QAEtC,kBAAa,GAAqB,IAAI,CAAC;QAEvC,mBAAc,GAAqB,IAAI,CAAC;QACxC,uBAAkB,GAAqB,IAAI,CAAC;IAChD,CAAC;CAAA;AAED,IAAK,kBAMJ;AAND,WAAK,kBAAkB;IACnB,uEAAU,CAAA;IACV,mEAAQ,CAAA;IACR,uEAAU,CAAA;IACV,mEAAQ,CAAA;IACR,+DAAM,CAAA;AACV,CAAC,EANI,kBAAkB,KAAlB,kBAAkB,QAMtB;AAED,IAAK,oBAKJ;AALD,WAAK,oBAAoB;IACrB,2DAAE,CAAA;IACF,+DAAI,CAAA;IACJ,+DAAI,CAAA;IACJ,iEAAK,CAAA;AACT,CAAC,EALI,oBAAoB,KAApB,oBAAoB,QAKxB;AAED,IAAI,wBAAwB,GAAG,4BAA4B,CAAC;AAE5D,MAAM,cAAc;IAApB;QAEW,MAAC,GAAW,CAAC,CAAC;QACd,MAAC,GAAW,CAAC,CAAC;QAEd,QAAG,GAAW,IAAI,CAAC;IAC9B,CAAC;CAAA;AAED,MAAM,WAAW;IAAjB;QACW,SAAI,GAAY,KAAK,CAAC;QACtB,gBAAW,GAAY,KAAK,CAAC;IACxC,CAAC;CAAA;AAED,MAAM,QAAQ;IAAd;QACW,WAAM,GAAY,KAAK,CAAC;QACxB,eAAU,GAAW,CAAC,CAAC,CAAC;QAExB,eAAU,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC5C,MAAC,GAAW,CAAC,CAAC,CAAC;QACf,MAAC,GAAW,CAAC,CAAC,CAAC;QAEf,YAAO,GAAW,CAAC,CAAC,CAAC;QACrB,YAAO,GAAW,CAAC,CAAC,CAAC;IAChC,CAAC;CAAA;AAED,MAAM,UAAU;IAAhB;QACW,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAY,IAAI,CAAC;QAE3B,WAAM,GAAgB,IAAI,WAAW,EAAE,CAAC;QACxC,aAAQ,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC1C,aAAQ,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC1C,cAAS,GAAgB,IAAI,WAAW,EAAE,CAAC;QAE3C,UAAK,GAAgB,IAAI,WAAW,EAAE,CAAC;QACvC,SAAI,GAAgB,IAAI,WAAW,EAAE,CAAC;QAEtC,cAAS,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC3C,eAAU,GAAgB,IAAI,WAAW,EAAE,CAAC;QAE5C,eAAU,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC5C,gBAAW,GAAgB,IAAI,WAAW,EAAE,CAAC;QAE7C,YAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;QACzC,YAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;QACzC,YAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;QACzC,YAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;QAEzC,gBAAW,GAAW,GAAG,CAAC;QAC1B,sBAAiB,GAAgB,IAAI,WAAW,EAAE,CAAC;QACnD,iBAAY,GAAW,GAAG,CAAC;QAC3B,uBAAkB,GAAgB,IAAI,WAAW,EAAE,CAAC;QAEpD,eAAU,GAAW,GAAG,CAAC;QACzB,eAAU,GAAW,GAAG,CAAC;QACzB,gBAAW,GAAW,GAAG,CAAC;QAC1B,gBAAW,GAAW,GAAG,CAAC;QAE1B,gBAAW,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC7C,kBAAa,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC/C,kBAAa,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC/C,mBAAc,GAAgB,IAAI,WAAW,EAAE,CAAC;QAEhD,iBAAY,GAAgB,IAAI,WAAW,EAAE,CAAC;QAC9C,mBAAc,GAAgB,IAAI,WAAW,EAAE,CAAC;QAChD,mBAAc,GAAgB,IAAI,WAAW,EAAE,CAAC;QAChD,oBAAe,GAAgB,IAAI,WAAW,EAAE,CAAC;IAC5D,CAAC;CAAA;AAED,SAAS,aAAa,CAAE,MAAkB,EAAE,UAAkB;IAC1D,IAAI,QAAQ,GAAW,UAAU,CAAC;IAClC,IAAI,MAAM,GAAW,UAAU,CAAC;IAChC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QACzB,EAAE,MAAM,CAAC;IACb,CAAC;IAED,IAAI,SAAS,GAAe,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9D,IAAI,IAAI,GAAW,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACjD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,kBAAkB,CAAE,OAAgB,EAAE,MAAwB,EAAE,MAAkB;IACvF,KAAK,IAAI,UAAU,GAAW,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,CAAC;QACxE,IAAI,KAAK,GAAmB,MAAM,CAAC,UAAU,CAAC,CAAC;QAE/C,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;QAClB,IAAI,KAAK,CAAC,IAAI,IAAI,kBAAkB,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,IAAI,kBAAkB,CAAC,QAAQ,EAAE,CAAC;YACvF,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;gBACxB,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YACrC,CAAC;iBACI,IAAI,KAAK,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;gBAC9B,QAAQ,GAAG,oBAAoB,CAAC,EAAE,CAAC;YACvC,CAAC;iBACI,IAAI,KAAK,CAAC,GAAG,IAAI,WAAW,EAAE,CAAC;gBAChC,QAAQ,GAAG,oBAAoB,CAAC,IAAI,CAAC;YACzC,CAAC;iBACI,IAAI,KAAK,CAAC,GAAG,IAAI,WAAW,EAAE,CAAC;gBAChC,QAAQ,GAAG,oBAAoB,CAAC,IAAI,CAAC;YACzC,CAAC;iBACI,IAAI,KAAK,CAAC,GAAG,IAAI,YAAY,EAAE,CAAC;gBACjC,QAAQ,GAAG,oBAAoB,CAAC,KAAK,CAAC;YAC1C,CAAC;QACL,CAAC;QAED,QAAQ,KAAK,CAAC,IAAI,EAAE,CAAC;YACjB,KAAK,kBAAkB,CAAC,UAAU;gBAAE,CAAC;oBACjC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1C,CAAC;gBAAC,MAAM;YACR,KAAK,kBAAkB,CAAC,UAAU;gBAAE,CAAC;oBACjC,OAAO,CAAC,WAAW,EAAE,CAAC;gBAC1B,CAAC;gBAAC,MAAM;YACR,KAAK,kBAAkB,CAAC,QAAQ;gBAAE,CAAC;oBAC/B,OAAO,CAAC,SAAS,EAAE,CAAC;gBACxB,CAAC;gBAAC,MAAM;YACR,KAAK,kBAAkB,CAAC,QAAQ;gBAAE,CAAC;oBAC/B,IAAI,MAAM,IAAI,EAAE,EAAE,CAAC;wBACf,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClD,CAAC;yBACI,IAAI,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC;wBACtB,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACrC,CAAC;gBACL,CAAC;gBAAC,MAAM;YACR,KAAK,kBAAkB,CAAC,MAAM;gBAAE,CAAC;oBAC7B,IAAI,MAAM,IAAI,EAAE,EAAE,CAAC;wBACf,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChD,CAAC;yBACI,IAAI,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC;wBACtB,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;oBACnC,CAAC;gBACL,CAAC;gBAAC,MAAM;QACZ,CAAC;IACL,CAAC;AACL,CAAC;AAED,SAAS,gBAAgB,CAAE,GAAW,EAAE,MAAkB,EAAE,OAAgB;IACxE,IAAI,QAAQ,GAAe,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnD,IAAI,kBAAkB,GAAW,OAAO,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC7E,IAAI,kBAAkB,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,kBAAkB,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC5F,OAAO,kBAAkB,CAAC,UAAU,CAAC;AACzC,CAAC;AAED,SAAS,sBAAsB,CAAE,cAA0B,EAAE,UAA4B,EACxD,OAAgB,EAAE,QAAgB;IAE/D,IAAI,QAAQ,GAAgB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;IACzD,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACjB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,CAAC;SACI,CAAC;QACF,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC;IAC1B,CAAC;AACL,CAAC;AAED,SAAS,uBAAuB,CAAE,cAA0B,EAAE,WAA6B,EACzD,iBAAmC,EAAE,KAAa;IAEhF,IAAI,QAAQ,GAAgB,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAChE,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,IAAI,QAAQ,GAAG,kCAAkC,CAAC,CAAC,2CAA2C;IAC9F,IAAI,KAAK,IAAI,QAAQ,EAAE,CAAC;QACpB,KAAK,IAAI,QAAQ,CAAC;QAClB,YAAY;QACZ,cAAc,CAAC,WAAW,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACjB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,CAAC;SACI,CAAC;QACF,YAAY;QACZ,cAAc,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;QAClC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC;IAC1B,CAAC;AACL,CAAC;AAED,SAAS,qBAAqB,CAAE,cAA0B,EAC1B,SAAiB,EAAE,MAAc,EACjC,SAAiB,EAAE,MAAc,EAAE,QAAgB;IAE/E,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;IAC7D,IAAI,WAAW,GAAG,MAAM,GAAG,SAAS,CAAC;IACrC,IAAI,WAAW,GAAG,MAAM,GAAG,SAAS,CAAC;IAErC,IAAI,SAAS,IAAI,QAAQ,EAAE,CAAC;QACxB,IAAI,SAAS,GAAG,GAAG,EAAE,CAAC;YAClB,SAAS,GAAG,GAAG,CAAC;QACpB,CAAC;QACD,SAAS,IAAI,QAAQ,CAAC;QACtB,IAAI,mBAAmB,GAAG,SAAS,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;QACvD,YAAY;QACZ,cAAc,CAAC,SAAS,CAAC,GAAG,WAAW,GAAG,mBAAmB,CAAC;QAC9D,YAAY;QACZ,cAAc,CAAC,SAAS,CAAC,GAAG,WAAW,GAAG,mBAAmB,CAAC;IAClE,CAAC;SACI,CAAC;QACF,YAAY;QACZ,cAAc,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;QAChC,YAAY;QACZ,cAAc,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;IACpC,CAAC;AACL,CAAC;AAED,SAAS,8BAA8B,CAAE,cAA0B,EAAE,QAAgB,EAAE,QAAgB,EAC9D,KAAa,EAAE,QAAgB;IAEpE,YAAY;IACZ,cAAc,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7C,IAAI,KAAK,IAAI,CAAC,QAAQ,EAAE,CAAC;QACrB,YAAY;QACZ,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;YACjC,YAAY;YACZ,cAAc,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;QAChD,CAAC;QACD,YAAY;QACZ,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IACzC,CAAC;SACI,CAAC;QACF,YAAY;QACZ,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;IAC1C,CAAC;IACD,YAAY;IACZ,cAAc,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7C,IAAI,KAAK,IAAI,QAAQ,EAAE,CAAC;QACpB,YAAY;QACZ,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;YACjC,YAAY;YACZ,cAAc,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;QAChD,CAAC;QACD,YAAY;QACZ,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IACzC,CAAC;SACI,CAAC;QACF,YAAY;QACZ,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;IAC1C,CAAC;AACL,CAAC;AAED,SAAS,gBAAgB,CAAE,cAA0B,EAAE,OAAgB;IACnE,sBAAsB,CAAC,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC9D,sBAAsB,CAAC,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAChE,sBAAsB,CAAC,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAChE,sBAAsB,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAEjE,sBAAsB,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAC5D,sBAAsB,CAAC,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAC3D,sBAAsB,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IACjE,sBAAsB,CAAC,cAAc,EAAE,YAAY,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAClE,sBAAsB,CAAC,cAAc,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IACjE,sBAAsB,CAAC,cAAc,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAClE,sBAAsB,CAAC,cAAc,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9D,sBAAsB,CAAC,cAAc,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9D,sBAAsB,CAAC,cAAc,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9D,sBAAsB,CAAC,cAAc,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAE9D,uBAAuB,CAAC,cAAc,EAAE,aAAa,EAAE,mBAAmB,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACtG,uBAAuB,CAAC,cAAc,EAAE,cAAc,EAAE,oBAAoB,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAExG,qBAAqB,CAAC,cAAc,EAAE,YAAY,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,kCAAkC,CAAC,CAAC;IACxI,qBAAqB,CAAC,cAAc,EAAE,aAAa,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,aAAa,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,kCAAkC,CAAC,CAAC;IAE1I,8BAA8B,CAAC,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,kCAAkC,CAAC,CAAC;IACpI,8BAA8B,CAAC,cAAc,EAAE,eAAe,EAAE,gBAAgB,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,kCAAkC,CAAC,CAAC;IACvI,8BAA8B,CAAC,cAAc,EAAE,cAAc,EAAE,gBAAgB,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,kCAAkC,CAAC,CAAC;IACtI,8BAA8B,CAAC,cAAc,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,kCAAkC,CAAC,CAAC;AAC7I,CAAC;AAED,SAAS,oBAAoB,CAAE,SAAiB,EAAE,SAAiB,EAAE,SAAiB,EAAE,cAAsB;IAC1G,IAAI,KAAK,GAAG,SAAS,GAAG,SAAS,CAAC;IAClC,OAAO,CAAC,SAAS,GAAG,cAAc,CAAC,GAAG,KAAK,CAAC;AAChD,CAAC;AAED,KAAK,UAAU,IAAI;IACf,IAAI,QAAQ,GAAW,EAAE,GAAG,IAAI,CAAC;IACjC,IAAI,QAAQ,GAAW,KAAK,CAAC;IAC7B,IAAI,UAAU,GAAuB,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;IACnF,IAAI,MAAM,GAAe,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAE3D,IAAI,IAAmB,CAAC;IAExB,wEAAwE;IACxE,IAAI,YAAY,GAAG,MAAM,KAAK,CAAC,YAAY,CAAC,CAAC;IAC7C,IAAI,SAAS,GAAG,MAAM,YAAY,CAAC,WAAW,EAAE,CAAC;IAEjD,IAAI,OAAO,GAAG;QACV,GAAG,EAAE;YACD,MAAM,EAAE,UAAU;YAClB,cAAc,EAAE,GAAW,EAAE;gBACzB,OAAO,QAAQ,GAAG,QAAQ,CAAC;YAC/B,CAAC;YACD,UAAU,EAAE,CAAC,UAAkB,EAAQ,EAAE;gBACrC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;YACnD,CAAC;YACD,eAAe,EAAE,GAAW,EAAE;gBAC1B,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YAC9B,CAAC;YACD,QAAQ,EAAE,CAAC,YAAoB,EAAE,YAAoB,EAAQ,EAAE;gBAC3D,IAAI,SAAS,GAAW,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;gBAC5D,IAAI,SAAS,GAAW,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;gBAE5D,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,QAAkB,EAAQ,EAAE;oBAC/C,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,IAAiB,EAAQ,EAAE;wBACpD,kCAAkC;wBAClC,IAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;wBACpC,IAAI,QAAQ,GAAW,IAAI,CAAC,UAAU,CAAC;wBACvC,wDAAwD;wBACxD,IAAI,YAAY,GAAW,OAAO,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAChE,IAAI,gBAAgB,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;wBAC7E,gBAAgB,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBAElC,OAAO,CAAC,aAAa,CAAC,YAAY,EAAE,gBAAgB,CAAC,UAAU,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC;oBAC9F,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC;YACD,OAAO,EAAE,CAAC,UAAkB,EAAQ,EAAE;gBAClC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;YACrD,CAAC;YACD,cAAc,EAAE,CAAC,WAAmB,EAAE,YAAoB,EAAQ,EAAE;gBAChE,WAAW,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;YAC3C,CAAC;YACD,kBAAkB,EAAE,GAAS,EAAE,GAAG,kBAAkB,EAAE,CAAC,CAAC,CAAC;YACzD,gBAAgB,EAAE,CAAC,EAAU,EAAE,KAAa,EAAE,MAAc,EAAE,YAAoB,EAAQ,EAAE;gBACxF,gBAAgB,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;YACtD,CAAC;YACD,qBAAqB,EAAE,GAAS,EAAE,GAAG,qBAAqB,EAAE,CAAC,CAAC,CAAC;YAC/D,qBAAqB,EAAE,CAAC,aAAqB,EAAE,UAAkB,EAAE,UAAkB,EAAE,oBAA4B,EAAE,UAAkB,EAAE,WAAmB,EAAQ,EAAE;gBAClK,qBAAqB,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,oBAAoB,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;YAChH,CAAC;SACJ;KACJ,CAAC;IACF,IAAI,MAAM,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC/D,IAAI,YAAY,GAAyB,MAAM,CAAC,QAAQ,CAAC;IAEzD,IAAI,OAAO,GAAY;QACnB,QAAQ,EAAG,YAAY,CAAC,OAAO,CAAC,QAA6B;QAC7D,SAAS,EAAG,YAAY,CAAC,OAAO,CAAC,SAA8B;QAE/D,YAAY,EAAG,YAAY,CAAC,OAAO,CAAC,YAAiC;QACrE,UAAU,EAAG,YAAY,CAAC,OAAO,CAAC,UAA+B;QACjE,UAAU,EAAG,YAAY,CAAC,OAAO,CAAC,UAA+B;QACjE,mBAAmB,EAAG,YAAY,CAAC,OAAO,CAAC,mBAAwC;QACnF,UAAU,EAAG,YAAY,CAAC,OAAO,CAAC,UAA+B;QAEjE,0BAA0B,EAAG,YAAY,CAAC,OAAO,CAAC,0BAA+C;QACjG,0BAA0B,EAAG,YAAY,CAAC,OAAO,CAAC,0BAA+C;QACjG,+BAA+B,EAAG,YAAY,CAAC,OAAO,CAAC,+BAAoD;QAC3G,kCAAkC,EAAG,YAAY,CAAC,OAAO,CAAC,kCAAuD;QACjH,6BAA6B,EAAG,YAAY,CAAC,OAAO,CAAC,6BAAkD;QACvG,iCAAiC,EAAG,YAAY,CAAC,OAAO,CAAC,iCAAsD;QAC/G,8BAA8B,EAAG,YAAY,CAAC,OAAO,CAAC,8BAAmD;QACzG,4BAA4B,EAAG,YAAY,CAAC,OAAO,CAAC,4BAAiD;QACrG,qCAAqC,EAAG,YAAY,CAAC,OAAO,CAAC,qCAA0D;QAEvH,aAAa,EAAG,YAAY,CAAC,OAAO,CAAC,aAAkC;QACvE,sBAAsB,EAAG,YAAY,CAAC,OAAO,CAAC,sBAA2C;QAEzF,aAAa,EAAG,YAAY,CAAC,OAAO,CAAC,aAAkC;QACvE,cAAc,EAAG,YAAY,CAAC,OAAO,CAAC,cAAmC;QACzE,kBAAkB,EAAG,YAAY,CAAC,OAAO,CAAC,kBAAuC;QACjF,QAAQ,EAAG,YAAY,CAAC,OAAO,CAAC,QAA6B;QAE7D,WAAW,EAAG,YAAY,CAAC,OAAO,CAAC,WAAgC;QACnE,WAAW,EAAG,YAAY,CAAC,OAAO,CAAC,WAAgC;QACnE,SAAS,EAAG,YAAY,CAAC,OAAO,CAAC,SAA8B;QAC/D,eAAe,EAAG,YAAY,CAAC,OAAO,CAAC,eAAoC;QAC3E,aAAa,EAAG,YAAY,CAAC,OAAO,CAAC,aAAkC;QACvE,cAAc,EAAG,YAAY,CAAC,OAAO,CAAC,cAAmC;QACzE,YAAY,EAAG,YAAY,CAAC,OAAO,CAAC,YAAiC;KACxE,CAAC;IAEF,IAAI,WAAW,GAAG,KAAK,CAAC;IACxB,IAAI,MAAM,GAAG,GAAS,EAAE;QACpB,WAAW,GAAG,IAAI,CAAC;QAEnB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;QACnC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;QAElD,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC,CAAA;IAED,IAAI,OAAO,GAA6B,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACvE,YAAY;IACZ,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC;IACvC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;IACrC,YAAY;IACZ,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC;IACvC,YAAY;IACZ,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC;IACtC,YAAY;IACZ,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC;IAC3C,YAAY;IACZ,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,MAAM,CAAC;IAC1C,YAAY;IACZ,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,GAAG,MAAM,CAAC;IAC7C,YAAY;IACZ,OAAO,CAAC,KAAK,CAAC,qBAAqB,CAAC,GAAG,MAAM,CAAC;IAC9C,YAAY;IACZ,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,GAAG,MAAM,CAAC;IAEhD,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;IAE1B,IAAI,MAAM,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACjE,YAAY;IACZ,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC;IACtC,YAAY;IACZ,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC;IACrC,YAAY;IACZ,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC;IAC1C,YAAY;IACZ,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,MAAM,CAAC;IACzC,YAAY;IACZ,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,GAAG,MAAM,CAAC;IAC5C,YAAY;IACZ,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,GAAG,MAAM,CAAC;IAC7C,YAAY;IACZ,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,GAAG,MAAM,CAAC;IAC/C,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;IACjC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;IACpC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,OAAO,CAAC,qBAAqB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IAEpD,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;IAE9B,IAAI,WAAW,GAAqB,EAAE,CAAC;IACvC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,EAAQ,EAAE;QACzD,IAAI,UAAU,GAAmB;YAC7B,IAAI,EAAE,kBAAkB,CAAC,UAAU;SACtC,CAAC;QACF,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC;QACD,uEAAuE;QACvE,QAAQ,CAAC,qBAAqB,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAa,EAAQ,EAAE;QACvD,IAAI,UAAU,GAAmB;YAC7B,IAAI,EAAE,kBAAkB,CAAC,QAAQ;SACpC,CAAC;QACF,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,EAAQ,EAAE;QACzD,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;QACxB,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;QACxB,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;QAC/C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;QACjD,IAAI,UAAU,GAAmB;YAC7B,IAAI,EAAE,kBAAkB,CAAC,UAAU;YACnC,CAAC,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM;YACzC,CAAC,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM;SAC3C,CAAC;QACF,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAgB,EAAQ,EAAE;QAC5D,WAAW,CAAC,IAAI,CAAiB;YAC7B,IAAI,EAAE,kBAAkB,CAAC,QAAQ;YACjC,GAAG,EAAE,CAAC,CAAC,GAAG;SACb,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAgB,EAAQ,EAAE;QAC1D,WAAW,CAAC,IAAI,CAAiB;YAC7B,IAAI,EAAE,kBAAkB,CAAC,MAAM;YAC/B,GAAG,EAAE,CAAC,CAAC,GAAG;SACb,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAGH,IAAI,OAAO,GAAe,EAAE,CAAC;IAC7B,MAAM,eAAe,GAAG,CAAC,CAAC;IAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC;QACvC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,QAAQ,EAAE,CAAC;IAChC,CAAC;IACD,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAa,EAAE,EAAE;QACpD,IAAI,cAAc,GAAc,CAAC,CAAC,cAAc,CAAC;QACjD,KAAK,IAAI,iBAAiB,GAAG,CAAC,EAAE,iBAAiB,GAAG,cAAc,CAAC,MAAM,EAAE,iBAAiB,EAAE,EAAE,CAAC;YAC7F,IAAI,KAAK,GAAU,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE1D,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,eAAe,EAAE,UAAU,EAAE,EAAE,CAAC;gBAClE,IAAI,QAAQ,GAAa,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC7C,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;oBACnB,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;oBACvB,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;oBACvC,QAAQ,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;oBACvC,QAAQ,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;oBAChC,QAAQ,CAAC,CAAC,GAAG,oBAAoB,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;oBACtG,QAAQ,CAAC,CAAC,GAAG,oBAAoB,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;oBACvG,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBACjC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBACjC,MAAM;gBACV,CAAC;YACL,CAAC;QACL,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC;QACD,uEAAuE;QACvE,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QAEjC,CAAC,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAa,EAAE,EAAE;QACnD,IAAI,cAAc,GAAc,CAAC,CAAC,cAAc,CAAC;QACjD,KAAK,IAAI,iBAAiB,GAAG,CAAC,EAAE,iBAAiB,GAAG,cAAc,CAAC,MAAM,EAAE,iBAAiB,EAAE,EAAE,CAAC;YAC7F,IAAI,KAAK,GAAU,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE1D,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,eAAe,EAAE,UAAU,EAAE,EAAE,CAAC;gBAClE,IAAI,QAAQ,GAAa,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC7C,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC;oBAC7D,QAAQ,CAAC,CAAC,GAAG,oBAAoB,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;oBACtG,QAAQ,CAAC,CAAC,GAAG,oBAAoB,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;oBACvG,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBACjC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBACjC,MAAM;gBACV,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAa,EAAE,EAAE;QAClD,IAAI,cAAc,GAAc,CAAC,CAAC,cAAc,CAAC;QACjD,KAAK,IAAI,iBAAiB,GAAG,CAAC,EAAE,iBAAiB,GAAG,cAAc,CAAC,MAAM,EAAE,iBAAiB,EAAE,EAAE,CAAC;YAC7F,IAAI,KAAK,GAAU,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE1D,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,eAAe,EAAE,UAAU,EAAE,EAAE,CAAC;gBAClE,IAAI,QAAQ,GAAa,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC7C,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC;oBAC7D,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;oBACxB,QAAQ,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;oBACjC,MAAM;gBACV,CAAC;YACL,CAAC;QACL,CAAC;QAED,uEAAuE;QACvE,QAAQ,CAAC,qBAAqB,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAa,EAAE,EAAE;QACrD,IAAI,cAAc,GAAc,CAAC,CAAC,cAAc,CAAC;QACjD,KAAK,IAAI,iBAAiB,GAAG,CAAC,EAAE,iBAAiB,GAAG,cAAc,CAAC,MAAM,EAAE,iBAAiB,EAAE,EAAE,CAAC;YAC7F,IAAI,KAAK,GAAU,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE1D,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,eAAe,EAAE,UAAU,EAAE,EAAE,CAAC;gBAClE,IAAI,QAAQ,GAAa,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC7C,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC;oBAC7D,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;oBACxB,QAAQ,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;oBACjC,MAAM;gBACV,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC,CAAC,CAAC;IAGH,IAAI,WAAW,GAAiB,EAAE,CAAC;IACnC,MAAM,mBAAmB,GAAG,CAAC,CAAC;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3C,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,EAAE,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,CAAe,EAAE,EAAE;QAC5D,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9C,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC;IACxD,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC,CAAe,EAAE,EAAE;QAC/D,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;QAC/C,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAE1C,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1B,OAAO,CAAC,QAAQ,EAAE,CAAC;IACnB,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;IAE5C,IAAI,sGAAsG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC;QACnI,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;IAE3C,IAAI,MAAM,GAAG,GAAS,EAAE;QACpB,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;QAC9C,IAAI,EAAE,GAAG,WAAW,GAAG,QAAQ,CAAC;QAChC,QAAQ,GAAG,WAAW,CAAC;QAEvB,kBAAkB,CAAC,OAAO,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;QACjD,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAEvB,IAAI,QAAQ,GAAc,SAAS,CAAC,WAAW,EAAE,CAAC;QAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,GAAG,mBAAmB,EAAE,CAAC,EAAE,EAAE,CAAC;YAClE,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;gBACtB,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;gBACjC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;YACrC,CAAC;iBACI,CAAC;gBACF,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,OAAO,CAAC,0BAA0B,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAChE,OAAO,CAAC,0BAA0B,CAAC,CAAC,EAChC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAC7D,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EACjE,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EACjE,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;gBACzE,OAAO,CAAC,+BAA+B,CAAC,CAAC,EACrC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAC3D,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;gBAC9D,OAAO,CAAC,kCAAkC,CAAC,CAAC,EACxC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,EACnE,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;gBAC3E,OAAO,CAAC,6BAA6B,CAAC,CAAC,EACnC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,EACrE,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBAC7E,OAAO,CAAC,iCAAiC,CAAC,CAAC,EACvC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAC/D,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAC/D,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAC/D,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACrE,OAAO,CAAC,8BAA8B,CAAC,CAAC,EACpC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAC1B,WAAW,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,WAAW,EACnF,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,EAC3B,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;gBAC3F,OAAO,CAAC,4BAA4B,CAAC,CAAC,EAClC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,EACzB,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,EACzB,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAC1B,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBAChC,OAAO,CAAC,qCAAqC,CAAC,CAAC,EAC3C,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,EACvE,WAAW,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,EAC3E,WAAW,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,EAC3E,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,WAAW,EAC7E,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,EACzE,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,WAAW,EAC7E,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,WAAW,EAC7E,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YACzF,CAAC;QACL,CAAC;QAED,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,eAAe,EAAE,UAAU,EAAE,EAAE,CAAC;YAClE,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;YAChC,OAAO,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACzJ,CAAC;QAED,OAAO,CAAC,YAAY,EAAE,CAAC;QACvB,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACvB,OAAO,CAAC,UAAU,EAAE,CAAC;QAErB,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC;YACnB,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC;QAED,OAAO,CAAC,UAAU,EAAE,CAAC;QAErB,qBAAqB,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC,CAAA;IAED,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,CAAC;AACb,CAAC;AAED,IAAI,EAAE,CAAC;ACvtBP,IAAI,oBAAoB,GAAG;;;;;;;;;;;;;;;;;;;;;;;;EAwBzB,CAAC;AAGH,IAAI,sBAAsB,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0F3B,CAAC","sourcesContent":["class WebAudio {\n\n    public samplesPerSecond: number = 0;\n    public audioCtx: AudioContext = null;\n    public audioBufferSize: number = 512;\n\n    public started: boolean = false;\n\n    public playTime: number = 0.0;\n    public nextAudioBufferPlayTime: number = 0.0;\n\n    public init (): void {\n        this.audioCtx = new AudioContext();\n        this.samplesPerSecond = this.audioCtx.sampleRate;\n        this.playTime = this.audioCtx.currentTime;\n        this.started = true;\n    }\n\n    public getSampleRate (): number {\n        let dummyAudioCtx = new AudioContext();\n        return dummyAudioCtx.sampleRate;\n    }\n\n    public updateAudio (gameAPI: GameAPI, memory: Uint8Array): void {\n        let currentAudioTime: number = this.audioCtx.currentTime;\n        let bufferingDelay = 50.0 /1000.0;\n        let bufferTime = this.audioBufferSize / this.samplesPerSecond;\n        let numSamples = this.audioBufferSize;\n        let maxNumQueuedBuffers = 5;\n\n        for (let i = 0; i < maxNumQueuedBuffers; ++i) {\n            let secsLeftTilNextAudio = this.nextAudioBufferPlayTime - currentAudioTime;\n            if (secsLeftTilNextAudio < bufferingDelay + bufferTime * maxNumQueuedBuffers) {\n\n                let newSamples = gameAPI.getGameSoundSamples(numSamples);\n                if (newSamples == 0) {\n                    return;\n                }\n\n                let floatBuffer = new Float32Array(memory.buffer, newSamples, numSamples);\n                let buffer = this.audioCtx.createBuffer(1, numSamples, this.samplesPerSecond);\n                let output = buffer.getChannelData(0);\n                for (let sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {\n                    output[sampleIndex] = floatBuffer[sampleIndex];\n                }\n\n                let bufferSourceNode = this.audioCtx.createBufferSource();\n                bufferSourceNode.connect(this.audioCtx.destination);\n                bufferSourceNode.buffer = buffer;\n\n                let playTime = Math.max(currentAudioTime + bufferingDelay, this.nextAudioBufferPlayTime);\n                bufferSourceNode.start(playTime);\n\n                this.nextAudioBufferPlayTime = playTime + bufferTime;\n            }\n            else { \n                break;\n            }\n        }\n    }\n\n    public tryUnlockAudioContext (): void {\n        if (this.audioCtx.state == \"suspended\") {\n            this.audioCtx.resume();\n        }\n    }\n}\n","let test_vertex_source = `\nstruct tri_transform {\n    vec2 pos;\n    float rotation;\n};\n\nuniform tri_transform triTransform;\n\nattribute vec3 position;\nattribute vec3 color;\n\nvarying vec3 vColor;\n\nvoid main() {\n    mat3 transform = mat3(cos(triTransform.rotation), sin(triTransform.rotation), 0.0, \n                          -sin(triTransform.rotation), cos(triTransform.rotation), 0.0, \n                          triTransform.pos.x, triTransform.pos.y, 1.0);\n    vec3 pos = vec3(position.x, position.y, 1.0);\n    pos = vec3(transform * pos);\n    gl_Position = vec4(pos.x, pos.y, -2.0 * (position.z - 0.5), 1.0); // use 0-1 for z like dx\n    gl_Position.y = -gl_Position.y;\n    vColor = color;\n}`;\n\n\nlet test_fragment_source = `\nprecision highp float;\n\nvarying vec3 vColor;\n\nvoid main() {\n    gl_FragColor = vec4(vColor, 1.0);\n}`;\n\n","/// <reference path=\"shaders\\test_vertex.ts\"/>\n\nclass ShaderProgram {\n    public vertexShader: WebGLShader = null;\n    public fragmentShader: WebGLShader = null;\n    public program: WebGLProgram = null;\n}\n\nclass WebGLRenderer {\n    public canvas: HTMLCanvasElement = null;\n    public glContext: WebGLRenderingContext = null;\n\n    public memoryView: DataView = null;\n\n    public spriteShader: ShaderProgram = null;\n    public spriteVertexBuffer: WebGLBuffer = null;\n    public spriteIndexBuffer: WebGLBuffer = null;\n\n    public windowWidth: number = 0;\n    public windowHeight: number = 0;\n\n    public textures: WebGLTexture[] = [];\n    public textureSizes: [number, number][] = [];\n\n    public numSpritesDrawnThisFrame: number = 0;\n    public spriteBatchNumSpritesDrawn: number = 0;\n    public spriteBatchSeenTextures: {[key: number]: boolean} = {};\n    public spriteBatchTextureList: number[] = []; // order that textures were drawn\n}\n\nlet wglr: WebGLRenderer = new WebGLRenderer();\nlet MAX_NUM_SPRITES: number = 10000;\n\nfunction compileAndLinkShader (gl: WebGLRenderingContext, \n                               vertexShaderSource: string, \n                               fragmentShaderSource: string): ShaderProgram \n{\n    var result = new ShaderProgram();\n\n    result.vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(result.vertexShader, vertexShaderSource);\n    gl.compileShader(result.vertexShader);\n    if (!gl.getShaderParameter(result.vertexShader, gl.COMPILE_STATUS)) {\n        console.log(gl.getShaderInfoLog(result.vertexShader));\n        return;\n    }\n\n    result.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(result.fragmentShader, fragmentShaderSource);\n    gl.compileShader(result.fragmentShader);\n    if (!gl.getShaderParameter(result.fragmentShader, gl.COMPILE_STATUS)) {\n        console.log(gl.getShaderInfoLog(result.fragmentShader));\n        return;\n    }\n\n    result.program = gl.createProgram();\n    gl.attachShader(result.program, result.vertexShader);\n    gl.attachShader(result.program, result.fragmentShader);\n    gl.linkProgram(result.program);\n\n    if (!gl.getProgramParameter(result.program, gl.LINK_STATUS)) {\n        console.log(gl.getProgramInfoLog(result.program));\n        return;\n    }\n\n    return result;\n}\n\nfunction createStaticBuffer (gl: WebGLRenderingContext, data: number[]): WebGLBuffer {\n    let floatArray = new Float32Array(data);\n    let result: WebGLBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, result);\n    gl.bufferData(gl.ARRAY_BUFFER, floatArray, gl.STATIC_DRAW);\n    return result;\n}\n\nfunction createIndexBuffer (gl: WebGLRenderingContext, data: number[]): WebGLBuffer {\n    let uintArray = new Uint16Array(data);\n    let result: WebGLBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, result);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, uintArray, gl.STATIC_DRAW);\n    return result;\n}\n\nfunction initWebGL (canvas: HTMLCanvasElement, memory: Uint8Array): void {\n    wglr.canvas = canvas;\n    wglr.glContext = <WebGLRenderingContext>canvas.getContext(\"webgl\", { alpha: false, antialias: false});\n\n    wglr.memoryView = new DataView(memory.buffer);\n\n    let gl: WebGLRenderingContext = wglr.glContext;\n    //gl.getExtension(\"OES_element_index_uint\");\n    gl.getExtension(\"OES_standard_derivatives\");\n    wglr.spriteShader = compileAndLinkShader(gl, sprite_vertex_source, sprite_fragment_source);\n\n    wglr.spriteVertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, wglr.spriteVertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, 4 * MAX_NUM_SPRITES * 40, gl.STATIC_DRAW);\n\n    let indices: number[] = [];\n    for (let spriteIndex = 0; spriteIndex < MAX_NUM_SPRITES; spriteIndex++) {\n        indices[spriteIndex * 6 + 0] = (spriteIndex * 4) + 0;\n        indices[spriteIndex * 6 + 1] = (spriteIndex * 4) + 2;\n        indices[spriteIndex * 6 + 2] = (spriteIndex * 4) + 1;\n        indices[spriteIndex * 6 + 3] = (spriteIndex * 4) + 1;\n        indices[spriteIndex * 6 + 4] = (spriteIndex * 4) + 2;\n        indices[spriteIndex * 6 + 5] = (spriteIndex * 4) + 3;\n    }\n    wglr.spriteIndexBuffer = createIndexBuffer(gl, indices);\n}\n\nfunction resizeWebGL(windowWidth: number, windowHeight: number): void{\n    wglr.windowWidth = windowWidth;\n    wglr.windowHeight = windowHeight;\n}\n\nfunction webglOnRenderStart (): void {\n    let gl: WebGLRenderingContext = wglr.glContext;\n    gl.viewport(0, 0, wglr.windowWidth, wglr.windowHeight);\n    //gl.enable(gl.DEPTH_TEST);\n    //gl.enable(gl.CULL_FACE);\n    gl.clearColor(0.05, 0.07, 0.16, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n}\n\nfunction webglLoadTexture (id: number, width: number, height: number, pixelDataPtr: number): void {\n    let gl: WebGLRenderingContext = wglr.glContext;\n    let texture: WebGLTexture = gl.createTexture();\n    if (wglr.textures.length != id) { throw 1; }\n    wglr.textures.push(texture);\n\n    wglr.textureSizes.push([width, height]);\n\n    let pixelView = new Uint8Array(wglr.memoryView.buffer, pixelDataPtr, width * height * 4);\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixelView);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n}\n\nfunction webglSpriteBatchStart (): void {\n    let gl: WebGLRenderingContext = wglr.glContext;\n\n    let program: WebGLProgram = wglr.spriteShader.program;\n    gl.useProgram(program);\n\n    let screenWidthLoc: WebGLUniformLocation = gl.getUniformLocation(program, \"screenDims.width\");\n    gl.uniform1f(screenWidthLoc, wglr.windowWidth);\n    let screenHeightLoc: WebGLUniformLocation = gl.getUniformLocation(program, \"screenDims.height\");\n    gl.uniform1f(screenHeightLoc, wglr.windowHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, wglr.spriteVertexBuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, wglr.spriteIndexBuffer);\n\n    var positionLocation = gl.getAttribLocation(program, \"pos\");\n    gl.enableVertexAttribArray(positionLocation);\n    gl.vertexAttribPointer(positionLocation, 3, gl.FLOAT, false, 40, 0);\n\n    var texCoordLocation = gl.getAttribLocation(program, \"texCoords\");\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 40, 12);\n\n    var colorCoordLocation = gl.getAttribLocation(program, \"color\");\n    gl.enableVertexAttribArray(colorCoordLocation);\n    gl.vertexAttribPointer(colorCoordLocation, 4, gl.FLOAT, false, 40, 20);\n\n    var texIndexLocation = gl.getAttribLocation(program, \"textureID\");\n    gl.enableVertexAttribArray(texIndexLocation);\n    gl.vertexAttribPointer(texIndexLocation, 1, gl.FLOAT, false, 40, 36);\n}\n\nfunction webglSpriteBatchFlush (spriteDataPtr: number, numSpritesBatched: number, vertexSize: number, \n                                numSpritesDrawn: number, textureIDs: number, numTextures: number): void \n{\n    let gl: WebGLRenderingContext = wglr.glContext;\n    let program: WebGLProgram = wglr.spriteShader.program;\n\n    let dataSize = numSpritesBatched * (vertexSize/4) * 4;\n    let bufferOffset = numSpritesDrawn * vertexSize * 4;\n\n    let newSpriteDataView = new Float32Array(wglr.memoryView.buffer, spriteDataPtr, dataSize);\n    gl.bufferSubData(gl.ARRAY_BUFFER, bufferOffset, newSpriteDataView);\n\n    let textureIDArrayView = new Uint32Array(wglr.memoryView.buffer, textureIDs, numTextures);\n    for (let i = 0; i < numTextures; i++) {\n        let texture = wglr.textures[textureIDArrayView[i]];\n\n        gl.activeTexture(gl.TEXTURE0 + i);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        var textureLocation = gl.getUniformLocation(program, \"texture\" + i);\n        gl.uniform1i(textureLocation, i);\n\n        var textureSizeLocation = gl.getUniformLocation(program, \"texture\" + i + \"Size\");\n        gl.uniform2fv(textureSizeLocation, wglr.textureSizes[textureIDArrayView[i]]);\n    }\n    gl.drawElements(gl.TRIANGLES, numSpritesBatched * 6, gl.UNSIGNED_SHORT, numSpritesDrawn * 6);\n}\n\n","/// <reference path=\"webgl_renderer.ts\"/>\n\nlet textDecoder: TextDecoder = new TextDecoder(\"utf-8\");\nlet textEncoder: TextEncoder = new TextEncoder();\n\nclass GameAPI {\n    initGame: CallableFunction = null;\n    initAudio: CallableFunction = null;\n\n    gameSetControllerConnected: CallableFunction = null;\n    gameSetControllerIndexDPad: CallableFunction = null;\n    gameSetControllerIndexStartBack: CallableFunction = null;\n    gameSetControllerIndexStickButtons: CallableFunction = null;\n    gameSetControllerIndexBumpers: CallableFunction = null;\n    gameSetControllerIndexFaceButtons: CallableFunction = null;\n    gameSetControllerIndexTriggers: CallableFunction = null;\n    gameSetControllerIndexSticks: CallableFunction = null;\n    gameSetControllerIndexStickDirections: CallableFunction = null;\n\n    setTouchInput: CallableFunction = null;\n    setVirtualInputEnabled: CallableFunction = null;\n\n    onFrameStart: CallableFunction = null;\n    updateGame: CallableFunction = null;\n    renderGame: CallableFunction = null;\n    getGameSoundSamples: CallableFunction = null;\n    onFrameEnd: CallableFunction = null;\n\n    onResize: CallableFunction = null;\n    onMouseMove: CallableFunction = null;\n    onMouseUp: CallableFunction = null;\n    onMouseDown: CallableFunction = null;\n\n    onLetterKeyDown: CallableFunction = null;\n    onLetterKeyUp: CallableFunction = null;\n    onArrowKeyDown: CallableFunction = null;\n    onArrowKeyUp: CallableFunction = null;\n\n    onFileFetched: CallableFunction = null;\n\n    webAllocMemory: CallableFunction = null;\n    webAllocTempMemory: CallableFunction = null;\n}\n\nenum GameInputEventType {\n    MOUSE_DOWN,\n    MOUSE_UP,\n    MOUSE_MOVE,\n    KEY_DOWN,\n    KEY_UP\n}\n\nenum GameInputArrowKeyDir {\n    UP,\n    DOWN,\n    LEFT,\n    RIGHT\n}\n\nlet gameInputKeyboardLetters = \"abcdefghijklmnopqrstuvwxyz\";\n\nclass GameInputEvent {\n    public type: GameInputEventType;\n    public x: number = 0;\n    public y: number = 0;\n\n    public key: string = null;\n}\n\nclass WebInputKey {\n    public down: boolean = false;\n    public justPressed: boolean = false;\n}\n\nclass WebTouch {\n    public active: boolean = false;\n    public identifier: number = -1;\n\n    public touchState: WebInputKey = new WebInputKey();\n    public x: number = -1;\n    public y: number = -1;\n\n    public radiusX: number = -1;\n    public radiusY: number = -1;\n}\n\nclass WebGamepad {\n    public connected: boolean = false;\n    public gamePadRef: Gamepad = null;\n\n    public dPadUp: WebInputKey = new WebInputKey();\n    public dPadDown: WebInputKey = new WebInputKey();\n    public dPadLeft: WebInputKey = new WebInputKey();\n    public dPadRight: WebInputKey = new WebInputKey();\n\n    public start: WebInputKey = new WebInputKey();\n    public back: WebInputKey = new WebInputKey();\n\n    public leftStick: WebInputKey = new WebInputKey();\n    public rightStick: WebInputKey = new WebInputKey();\n\n    public leftBumper: WebInputKey = new WebInputKey();\n    public rightBumper: WebInputKey = new WebInputKey();\n\n    public aButton: WebInputKey = new WebInputKey();\n    public bButton: WebInputKey = new WebInputKey();\n    public xButton: WebInputKey = new WebInputKey();\n    public yButton: WebInputKey = new WebInputKey();\n\n    public leftTrigger: number = 0.0;\n    public leftTriggerButton: WebInputKey = new WebInputKey();\n    public rightTrigger: number = 0.0;\n    public rightTriggerButton: WebInputKey = new WebInputKey();\n\n    public leftStickX: number = 0.0;\n    public leftStickY: number = 0.0;\n    public rightStickX: number = 0.0;\n    public rightStickY: number = 0.0;\n\n    public leftStickUp: WebInputKey = new WebInputKey();\n    public leftStickDown: WebInputKey = new WebInputKey();\n    public leftStickLeft: WebInputKey = new WebInputKey();\n    public leftStickRight: WebInputKey = new WebInputKey();\n\n    public rightStickUp: WebInputKey = new WebInputKey();\n    public rightStickDown: WebInputKey = new WebInputKey();\n    public rightStickLeft: WebInputKey = new WebInputKey();\n    public rightStickRight: WebInputKey = new WebInputKey();\n}\n\nfunction bytesToString (memory: Uint8Array, msgPointer: number): string {\n    let msgStart: number = msgPointer;\n    let msgEnd: number = msgPointer;\n    while (memory[msgEnd] != 0) {\n        ++msgEnd;\n    }\n\n    let msgBuffer: Uint8Array = memory.subarray(msgStart, msgEnd);\n    let text: string = textDecoder.decode(msgBuffer);\n    return text;\n}\n\nfunction processInputEvents (gameAPI: GameAPI, events: GameInputEvent[], memory: Uint8Array) {\n    for (let eventIndex: number = 0; eventIndex < events.length; ++eventIndex) {\n        let event: GameInputEvent = events[eventIndex];\n\n        let letter = \"\";\n        let arrowDir = -1;\n        if (event.type == GameInputEventType.KEY_UP || event.type == GameInputEventType.KEY_DOWN) {\n            if (event.key.length == 1) {\n                letter = event.key.toLowerCase();\n            }\n            else if (event.key == \"ArrowUp\") {\n                arrowDir = GameInputArrowKeyDir.UP;\n            }\n            else if (event.key == \"ArrowDown\") {\n                arrowDir = GameInputArrowKeyDir.DOWN;\n            }\n            else if (event.key == \"ArrowLeft\") {\n                arrowDir = GameInputArrowKeyDir.LEFT;\n            }\n            else if (event.key == \"ArrowRight\") {\n                arrowDir = GameInputArrowKeyDir.RIGHT;\n            }\n        }\n\n        switch (event.type) {\n            case GameInputEventType.MOUSE_MOVE: {\n                gameAPI.onMouseMove(event.x, event.y);\n            } break;\n            case GameInputEventType.MOUSE_DOWN: {\n                gameAPI.onMouseDown();\n            } break;\n            case GameInputEventType.MOUSE_UP: {\n                gameAPI.onMouseUp();\n            } break;\n            case GameInputEventType.KEY_DOWN: {\n                if (letter != \"\") {\n                    gameAPI.onLetterKeyDown(letter.charCodeAt(0));\n                }\n                else if (arrowDir != -1) {\n                    gameAPI.onArrowKeyDown(arrowDir);\n                }\n            } break;\n            case GameInputEventType.KEY_UP: {\n                if (letter != \"\") {\n                    gameAPI.onLetterKeyUp(letter.charCodeAt(0));\n                }\n                else if (arrowDir != -1) {\n                    gameAPI.onArrowKeyUp(arrowDir);\n                }\n            } break;\n        }\n    }\n}\n\nfunction encodeTempString (str: string, memory: Uint8Array, gameAPI: GameAPI): number {\n    let strBytes: Uint8Array = textEncoder.encode(str);\n    let tempGameSideString: number = gameAPI.webAllocTempMemory(strBytes.length);\n    let gameSideStringView = new Uint8Array(memory.buffer, tempGameSideString, strBytes.length);\n    return gameSideStringView.byteOffset;\n}\n\nfunction updateControllerButton (gameController: WebGamepad, buttonProp: keyof WebGamepad, \n                                 gamepad: Gamepad, buttonID: number): void \n{\n    let inputKey = <WebInputKey>(gameController[buttonProp]);\n    inputKey.justPressed = false;\n    if (gamepad.buttons[buttonID].pressed) {\n        if (!inputKey.down) {\n            inputKey.justPressed = true;\n        }\n        inputKey.down = true;\n    }\n    else {\n        inputKey.down = false;\n    }\n}\n\nfunction updateControllerTrigger (gameController: WebGamepad, triggerProp: keyof WebGamepad, \n                                  triggerButtonProp: keyof WebGamepad, value: number) \n{\n    let inputKey = <WebInputKey>(gameController[triggerButtonProp]);\n    inputKey.justPressed = false;\n    let deadZone = 0.11764705882352941176470588235294; // attempt to match xinput default deadzone\n    if (value >= deadZone) {\n        value -= deadZone;\n        //@ts-ignore\n        gameController[triggerProp] = value / (1.0 - deadZone);\n        if (!inputKey.down) {\n            inputKey.justPressed = true;\n        }\n        inputKey.down = true;\n    }\n    else {\n        //@ts-ignore\n        gameController[triggerProp] = 0.0;\n        inputKey.down = false;\n    }\n}\n\nfunction updateControllerStick (gameController: WebGamepad, \n                                xProperty: string, xValue: number, \n                                yProperty: string, yValue: number, deadZone: number): void \n{\n    let magnitude = Math.sqrt(xValue * xValue + yValue * yValue);\n    let normalizedX = xValue / magnitude;\n    let normalizedY = yValue / magnitude;\n\n    if (magnitude >= deadZone) {\n        if (magnitude > 1.0) {\n            magnitude = 1.0;\n        }\n        magnitude -= deadZone;\n        let normalizedMagnitude = magnitude / (1.0 - deadZone);\n        //@ts-ignore\n        gameController[xProperty] = normalizedX * normalizedMagnitude;\n        //@ts-ignore\n        gameController[yProperty] = normalizedY * normalizedMagnitude;\n    }\n    else {\n        //@ts-ignore\n        gameController[xProperty] = 0.0;\n        //@ts-ignore\n        gameController[yProperty] = 0.0;\n    }\n}\n\nfunction updateControllerStickDirection (gameController: WebGamepad, dir0Prop: string, dir1Prop: string, \n                                         value: number, deadZone: number) \n{\n    //@ts-ignore\n    gameController[dir0Prop].justPressed = false;\n    if (value <= -deadZone) {\n        //@ts-ignore\n        if (!gameController[dir0Prop].down) {\n            //@ts-ignore\n            gameController[dir0Prop].justPressed = true;\n        }\n        //@ts-ignore\n        gameController[dir0Prop].down = true;\n    }\n    else {\n        //@ts-ignore\n        gameController[dir0Prop].down = false;\n    }\n    //@ts-ignore\n    gameController[dir1Prop].justPressed = false;\n    if (value >= deadZone) {\n        //@ts-ignore\n        if (!gameController[dir1Prop].down) {\n            //@ts-ignore\n            gameController[dir1Prop].justPressed = true;\n        }\n        //@ts-ignore\n        gameController[dir1Prop].down = true;\n    }\n    else {\n        //@ts-ignore\n        gameController[dir1Prop].down = false;\n    }\n}\n\nfunction updateController (gameController: WebGamepad, gamepad: Gamepad): void {\n    updateControllerButton(gameController, \"dPadUp\", gamepad, 12);\n    updateControllerButton(gameController, \"dPadDown\", gamepad, 13);\n    updateControllerButton(gameController, \"dPadLeft\", gamepad, 14);\n    updateControllerButton(gameController, \"dPadRight\", gamepad, 15);\n\n    updateControllerButton(gameController, \"start\", gamepad, 9);\n    updateControllerButton(gameController, \"back\", gamepad, 8);\n    updateControllerButton(gameController, \"leftStick\", gamepad, 10);\n    updateControllerButton(gameController, \"rightStick\", gamepad, 11);\n    updateControllerButton(gameController, \"leftBumper\", gamepad, 4);\n    updateControllerButton(gameController, \"rightBumper\", gamepad, 5);\n    updateControllerButton(gameController, \"aButton\", gamepad, 0);\n    updateControllerButton(gameController, \"bButton\", gamepad, 1);\n    updateControllerButton(gameController, \"xButton\", gamepad, 2);\n    updateControllerButton(gameController, \"yButton\", gamepad, 3);\n\n    updateControllerTrigger(gameController, \"leftTrigger\", \"leftTriggerButton\", gamepad.buttons[6].value);\n    updateControllerTrigger(gameController, \"rightTrigger\", \"rightTriggerButton\", gamepad.buttons[7].value);\n\n    updateControllerStick(gameController, \"leftStickX\", gamepad.axes[0], \"leftStickY\", gamepad.axes[1], 0.23953978087710196234015930661946);\n    updateControllerStick(gameController, \"rightStickX\", gamepad.axes[2], \"rightStickY\", gamepad.axes[3], 0.23953978087710196234015930661946);\n\n    updateControllerStickDirection(gameController, \"leftStickUp\", \"leftStickDown\", gamepad.axes[1], 0.61037018951994384594256416516617);\n    updateControllerStickDirection(gameController, \"leftStickLeft\", \"leftStickRight\", gamepad.axes[0], 0.61037018951994384594256416516617);\n    updateControllerStickDirection(gameController, \"rightStickUp\", \"rightStickDown\", gamepad.axes[3], 0.26517532883693960386974700155644);\n    updateControllerStickDirection(gameController, \"rightStickLeft\", \"rightStickRight\", gamepad.axes[2], 0.26517532883693960386974700155644);\n}\n\nfunction clientPosToScreenPos (clientPos: number, canvasDim: number, clientDim: number, clientStartPos: number): number {\n    let scale = canvasDim / clientDim;\n    return (clientPos - clientStartPos) * scale;\n}\n\nasync function main (): Promise<void> {\n    let pageSize: number = 64 * 1024;\n    let numPages: number = 10000;\n    let wasmMemory: WebAssembly.Memory = new WebAssembly.Memory({ initial: numPages });\n    let memory: Uint8Array = new Uint8Array(wasmMemory.buffer);\n\n    let wglr: WebGLRenderer;\n\n    // TODO(ebuchholz): try instantiateStreaming again, with fixed mime-type\n    let wasmResponse = await fetch(\"./gng.wasm\");\n    let wasmBytes = await wasmResponse.arrayBuffer();\n\n    let wasmObj = {\n        env: {\n            memory: wasmMemory,\n            getMemCapacity: (): number => {\n                return pageSize * numPages;\n            },\n            consoleLog: (msgPointer: number): void => {\n                console.log(bytesToString(memory, msgPointer));\n            },\n            rngSeedFromTime: (): BigInt => {\n                return BigInt(Date.now());\n            },\n            readFile: (assetNamePtr: number, assetPathPtr: number): void => {\n                let assetName: string = bytesToString(memory, assetNamePtr);\n                let assetPath: string = bytesToString(memory, assetPathPtr);\n\n                fetch(assetPath).then((response: Response): void => {\n                    response.arrayBuffer().then((data: ArrayBuffer): void => {\n                        // Copy file data into wasm memory\n                        let dataView = new Uint8Array(data);\n                        let numBytes: number = data.byteLength;\n                        // TODO: better management of temporary loaded file data\n                        let gameSideData: number = gameAPI.webAllocTempMemory(numBytes);\n                        let gameSideDataView = new Uint8Array(memory.buffer, gameSideData, numBytes);\n                        gameSideDataView.set(dataView, 0);\n\n                        gameAPI.onFileFetched(assetNamePtr, gameSideDataView.byteOffset, gameSideDataView.length);\n                    });\n                });\n            },\n            onError: (msgPointer: number): void => {\n                console.error(bytesToString(memory, msgPointer));\n            },\n            rendererResize: (windowWidth: number, windowHeight: number): void => {\n                resizeWebGL(windowWidth, windowHeight);\n            },\n            webglOnRenderStart: (): void => { webglOnRenderStart(); },\n            webglLoadTexture: (id: number, width: number, height: number, pixelDataPtr: number): void => {\n                webglLoadTexture(id, width, height, pixelDataPtr); \n            },\n            webglSpriteBatchStart: (): void => { webglSpriteBatchStart(); },\n            webglSpriteBatchFlush: (spriteDataPtr: number, numSprites: number, vertexSize: number, totalNumSpritesDrawn: number, textureIDs: number, numTextures: number): void => {\n                webglSpriteBatchFlush(spriteDataPtr, numSprites, vertexSize, totalNumSpritesDrawn, textureIDs, numTextures);\n            }\n        }\n    };\n    let result = await WebAssembly.instantiate(wasmBytes, wasmObj);\n    let wasmInstance: WebAssembly.Instance = result.instance;\n\n    let gameAPI = <GameAPI>{\n        initGame: (wasmInstance.exports.initGame as CallableFunction),\n        initAudio: (wasmInstance.exports.initAudio as CallableFunction),\n\n        onFrameStart: (wasmInstance.exports.onFrameStart as CallableFunction),\n        updateGame: (wasmInstance.exports.updateGame as CallableFunction),\n        renderGame: (wasmInstance.exports.renderGame as CallableFunction),\n        getGameSoundSamples: (wasmInstance.exports.getGameSoundSamples as CallableFunction),\n        onFrameEnd: (wasmInstance.exports.onFrameEnd as CallableFunction),\n\n        gameSetControllerConnected: (wasmInstance.exports.gameSetControllerConnected as CallableFunction),\n        gameSetControllerIndexDPad: (wasmInstance.exports.gameSetControllerIndexDPad as CallableFunction),\n        gameSetControllerIndexStartBack: (wasmInstance.exports.gameSetControllerIndexStartBack as CallableFunction),\n        gameSetControllerIndexStickButtons: (wasmInstance.exports.gameSetControllerIndexStickButtons as CallableFunction),\n        gameSetControllerIndexBumpers: (wasmInstance.exports.gameSetControllerIndexBumpers as CallableFunction),\n        gameSetControllerIndexFaceButtons: (wasmInstance.exports.gameSetControllerIndexFaceButtons as CallableFunction),\n        gameSetControllerIndexTriggers: (wasmInstance.exports.gameSetControllerIndexTriggers as CallableFunction),\n        gameSetControllerIndexSticks: (wasmInstance.exports.gameSetControllerIndexSticks as CallableFunction),\n        gameSetControllerIndexStickDirections: (wasmInstance.exports.gameSetControllerIndexStickDirections as CallableFunction),\n\n        setTouchInput: (wasmInstance.exports.setTouchInput as CallableFunction),\n        setVirtualInputEnabled: (wasmInstance.exports.setVirtualInputEnabled as CallableFunction),\n\n        onFileFetched: (wasmInstance.exports.onFileFetched as CallableFunction),\n        webAllocMemory: (wasmInstance.exports.webAllocMemory as CallableFunction),\n        webAllocTempMemory: (wasmInstance.exports.webAllocTempMemory as CallableFunction),\n        onResize: (wasmInstance.exports.onResize as CallableFunction),\n\n        onMouseMove: (wasmInstance.exports.onMouseMove as CallableFunction),\n        onMouseDown: (wasmInstance.exports.onMouseDown as CallableFunction),\n        onMouseUp: (wasmInstance.exports.onMouseUp as CallableFunction),\n        onLetterKeyDown: (wasmInstance.exports.onLetterKeyDown as CallableFunction),\n        onLetterKeyUp: (wasmInstance.exports.onLetterKeyUp as CallableFunction),\n        onArrowKeyDown: (wasmInstance.exports.onArrowKeyDown as CallableFunction),\n        onArrowKeyUp: (wasmInstance.exports.onArrowKeyUp as CallableFunction)\n    };\n\n    let justResized = false;\n    let resize = (): void => {\n        justResized = true;\n\n        canvas.width = mainDiv.clientWidth;\n        canvas.height = mainDiv.clientHeight;\n        canvas.style.width = mainDiv.clientWidth + \"px\";\n        canvas.style.height = mainDiv.clientHeight + \"px\";\n\n        gameAPI.onResize(canvas.width, canvas.height);\n    }\n\n    let mainDiv: HTMLElement = <HTMLElement>document.getElementById(\"gng\");\n    //@ts-ignore\n    mainDiv.style[\"touch-action\"] = \"none\";\n    mainDiv.style[\"overflow\"] = \"hidden\";\n    //@ts-ignore\n    mainDiv.style[\"touch-action\"] = \"none\";\n    //@ts-ignore\n    mainDiv.style[\"user-select\"] = \"none\";\n    //@ts-ignore\n    mainDiv.style[\"-moz-user-select\"] = \"none\";\n    //@ts-ignore\n    mainDiv.style[\"-ms-user-select\"] = \"none\";\n    //@ts-ignore\n    mainDiv.style[\"-khtml-user-select\"] = \"none\";\n    //@ts-ignore\n    mainDiv.style[\"-webkit-user-select\"] = \"none\";\n    //@ts-ignore\n    mainDiv.style[\"-webkit-touch-callout\"] = \"none\";\n\n    mainDiv.draggable = false;\n\n    let canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n    //@ts-ignore\n    canvas.style[\"touch-action\"] = \"none\";\n    //@ts-ignore\n    canvas.style[\"user-select\"] = \"none\";\n    //@ts-ignore\n    canvas.style[\"-moz-user-select\"] = \"none\";\n    //@ts-ignore\n    canvas.style[\"-ms-user-select\"] = \"none\";\n    //@ts-ignore\n    canvas.style[\"-khtml-user-select\"] = \"none\";\n    //@ts-ignore\n    canvas.style[\"-webkit-user-select\"] = \"none\";\n    //@ts-ignore\n    canvas.style[\"-webkit-touch-callout\"] = \"none\";\n    canvas.style[\"outline\"] = \"none\";\n    canvas.style[\"overflow\"] = \"hidden\";\n    canvas.draggable = false;\n    mainDiv.insertAdjacentElement(\"afterbegin\", canvas);\n\n    let webAudio = new WebAudio();\n\n    let inputEvents: GameInputEvent[] = [];\n    canvas.addEventListener(\"mousedown\", (e: MouseEvent): void => {\n        let inputEvent = <GameInputEvent>{\n            type: GameInputEventType.MOUSE_DOWN\n        };\n        inputEvents.push(inputEvent);\n\n        if (!webAudio.started) {\n            webAudio.init();\n        }\n        // for ios/chrome/etc, whatever browers need touch input to start audio\n        webAudio.tryUnlockAudioContext();\n    });\n    canvas.addEventListener(\"mouseup\", (e: MouseEvent): void => {\n        let inputEvent = <GameInputEvent>{\n            type: GameInputEventType.MOUSE_UP\n        };\n        inputEvents.push(inputEvent);\n    });\n    canvas.addEventListener(\"mousemove\", (e: MouseEvent): void => {\n        let clientX = e.clientX;\n        let clientY = e.clientY;\n        let scaleX = canvas.width / canvas.clientWidth;\n        let scaleY = canvas.height / canvas.clientHeight;\n        let inputEvent = <GameInputEvent>{\n            type: GameInputEventType.MOUSE_MOVE,\n            x: (clientX - canvas.clientLeft) * scaleX,\n            y: (clientY - canvas.clientTop) * scaleY\n        };\n        inputEvents.push(inputEvent);\n    });\n    document.addEventListener(\"keydown\", (e: KeyboardEvent): void => {\n        inputEvents.push(<GameInputEvent>{\n            type: GameInputEventType.KEY_DOWN,\n            key: e.key\n        });\n    });\n    document.addEventListener(\"keyup\", (e: KeyboardEvent): void => {\n        inputEvents.push(<GameInputEvent>{\n            type: GameInputEventType.KEY_UP,\n            key: e.key\n        });\n    });\n\n\n    let touches: WebTouch[] = [];\n    const MAX_NUM_TOUCHES = 4;\n    for (let i = 0; i < MAX_NUM_TOUCHES; i++) {\n        touches[i] = new WebTouch();\n    }\n    canvas.addEventListener(\"touchstart\", (e: TouchEvent) => {\n        let changedTouches: TouchList = e.changedTouches;\n        for (let changedTouchIndex = 0; changedTouchIndex < changedTouches.length; changedTouchIndex++) {\n            let touch: Touch = changedTouches.item(changedTouchIndex);\n\n            for (let touchIndex = 0; touchIndex < MAX_NUM_TOUCHES; touchIndex++) {\n                let webTouch: WebTouch = touches[touchIndex];\n                if (!webTouch.active) {\n                    webTouch.active = true;\n                    webTouch.identifier = touch.identifier;\n                    webTouch.touchState.justPressed = true;\n                    webTouch.touchState.down = true;\n                    webTouch.x = clientPosToScreenPos(touch.clientX, canvas.width, canvas.clientWidth, canvas.clientLeft);\n                    webTouch.y = clientPosToScreenPos(touch.clientY, canvas.height, canvas.clientHeight, canvas.clientTop);\n                    webTouch.radiusX = touch.radiusX;\n                    webTouch.radiusY = touch.radiusY;\n                    break;\n                }\n            }\n        }\n\n        if (!webAudio.started) {\n            webAudio.init();\n        }\n        // for ios/chrome/etc, whatever browers need touch input to start audio\n        webAudio.tryUnlockAudioContext();\n\n        e.preventDefault();\n    });\n    canvas.addEventListener(\"touchmove\", (e: TouchEvent) => {\n        let changedTouches: TouchList = e.changedTouches;\n        for (let changedTouchIndex = 0; changedTouchIndex < changedTouches.length; changedTouchIndex++) {\n            let touch: Touch = changedTouches.item(changedTouchIndex);\n\n            for (let touchIndex = 0; touchIndex < MAX_NUM_TOUCHES; touchIndex++) {\n                let webTouch: WebTouch = touches[touchIndex];\n                if (webTouch.active && webTouch.identifier == touch.identifier) {\n                    webTouch.x = clientPosToScreenPos(touch.clientX, canvas.width, canvas.clientWidth, canvas.clientLeft);\n                    webTouch.y = clientPosToScreenPos(touch.clientY, canvas.height, canvas.clientHeight, canvas.clientTop);\n                    webTouch.radiusX = touch.radiusX;\n                    webTouch.radiusY = touch.radiusY;\n                    break;\n                }\n            }\n        }\n    });\n    canvas.addEventListener(\"touchend\", (e: TouchEvent) => {\n        let changedTouches: TouchList = e.changedTouches;\n        for (let changedTouchIndex = 0; changedTouchIndex < changedTouches.length; changedTouchIndex++) {\n            let touch: Touch = changedTouches.item(changedTouchIndex);\n\n            for (let touchIndex = 0; touchIndex < MAX_NUM_TOUCHES; touchIndex++) {\n                let webTouch: WebTouch = touches[touchIndex];\n                if (webTouch.active && webTouch.identifier == touch.identifier) {\n                    webTouch.active = false;\n                    webTouch.touchState.down = false;\n                    break;\n                }\n            }\n        }\n\n        // for ios/chrome/etc, whatever browers need touch input to start audio\n        webAudio.tryUnlockAudioContext();\n    });\n    canvas.addEventListener(\"touchcancel\", (e: TouchEvent) => {\n        let changedTouches: TouchList = e.changedTouches;\n        for (let changedTouchIndex = 0; changedTouchIndex < changedTouches.length; changedTouchIndex++) {\n            let touch: Touch = changedTouches.item(changedTouchIndex);\n\n            for (let touchIndex = 0; touchIndex < MAX_NUM_TOUCHES; touchIndex++) {\n                let webTouch: WebTouch = touches[touchIndex];\n                if (webTouch.active && webTouch.identifier == touch.identifier) {\n                    webTouch.active = false;\n                    webTouch.touchState.down = false;\n                    break;\n                }\n            }\n        }\n    });\n    \n\n    let controllers: WebGamepad[] = [];\n    const MAX_NUM_CONTROLLERS = 4;\n    for (let i = 0; i < MAX_NUM_CONTROLLERS; i++) {\n        controllers[i] = new WebGamepad();\n    }\n\n    window.addEventListener(\"gamepadconnected\", (e: GamepadEvent) => {\n        controllers[e.gamepad.index].connected = true;\n        controllers[e.gamepad.index].gamePadRef = e.gamepad;\n    });\n    window.addEventListener(\"gamepaddisconnected\", (e: GamepadEvent) => {\n        controllers[e.gamepad.index].connected = false;\n        controllers[e.gamepad.index].gamePadRef = null;\n    });\n\n    window.addEventListener(\"resize\", resize);\n\n    initWebGL(canvas, memory);\n    gameAPI.initGame();\n    gameAPI.initAudio(webAudio.getSampleRate());\n\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) {\n        gameAPI.setVirtualInputEnabled(true);\n    }\n\n    let lastTime = new Date().getTime() / 1000;\n\n    let update = (): void => {\n        let currentTime = new Date().getTime() / 1000;\n        let dt = currentTime - lastTime;\n        lastTime = currentTime;\n\n        processInputEvents(gameAPI, inputEvents, memory);\n        inputEvents.length = 0;\n\n        let gamepads: Gamepad[] = navigator.getGamepads();\n        for (let i = 0; i < gamepads.length && i < MAX_NUM_CONTROLLERS; i++) {\n            if (gamepads[i] == null) {\n                controllers[i].connected = false;\n                controllers[i].gamePadRef = null;\n            }\n            else {\n                updateController(controllers[i], gamepads[i]);\n                gameAPI.gameSetControllerConnected(i, controllers[i].connected);\n                gameAPI.gameSetControllerIndexDPad(i, \n                    controllers[i].dPadUp.down, controllers[i].dPadUp.justPressed,\n                    controllers[i].dPadDown.down, controllers[i].dPadDown.justPressed,\n                    controllers[i].dPadLeft.down, controllers[i].dPadLeft.justPressed,\n                    controllers[i].dPadRight.down, controllers[i].dPadRight.justPressed);\n                gameAPI.gameSetControllerIndexStartBack(i, \n                    controllers[i].start.down, controllers[i].start.justPressed,\n                    controllers[i].back.down, controllers[i].back.justPressed)\n                gameAPI.gameSetControllerIndexStickButtons(i, \n                    controllers[i].leftStick.down, controllers[i].leftStick.justPressed,\n                    controllers[i].rightStick.down, controllers[i].rightStick.justPressed);\n                gameAPI.gameSetControllerIndexBumpers(i, \n                    controllers[i].leftBumper.down, controllers[i].leftBumper.justPressed,\n                    controllers[i].rightBumper.down, controllers[i].rightBumper.justPressed);\n                gameAPI.gameSetControllerIndexFaceButtons(i, \n                    controllers[i].aButton.down, controllers[i].aButton.justPressed,\n                    controllers[i].bButton.down, controllers[i].bButton.justPressed,\n                    controllers[i].xButton.down, controllers[i].xButton.justPressed,\n                    controllers[i].yButton.down, controllers[i].yButton.justPressed);\n                gameAPI.gameSetControllerIndexTriggers(i, \n                    controllers[i].leftTrigger, \n                    controllers[i].leftTriggerButton.down, controllers[i].leftTriggerButton.justPressed,\n                    controllers[i].rightTrigger, \n                    controllers[i].rightTriggerButton.down, controllers[i].rightTriggerButton.justPressed);\n                gameAPI.gameSetControllerIndexSticks(i,                     \n                    controllers[i].leftStickX,  \n                    controllers[i].leftStickY,  \n                    controllers[i].rightStickX,  \n                    controllers[i].rightStickY);\n                gameAPI.gameSetControllerIndexStickDirections(i, \n                    controllers[i].leftStickUp.down, controllers[i].leftStickUp.justPressed,\n                    controllers[i].leftStickDown.down, controllers[i].leftStickDown.justPressed,\n                    controllers[i].leftStickLeft.down, controllers[i].leftStickLeft.justPressed,\n                    controllers[i].leftStickRight.down, controllers[i].leftStickRight.justPressed,\n                    controllers[i].rightStickUp.down, controllers[i].rightStickUp.justPressed,\n                    controllers[i].rightStickDown.down, controllers[i].rightStickDown.justPressed,\n                    controllers[i].rightStickLeft.down, controllers[i].rightStickLeft.justPressed,\n                    controllers[i].rightStickRight.down, controllers[i].rightStickRight.justPressed);\n            }\n        }\n\n        for (let touchIndex = 0; touchIndex < MAX_NUM_TOUCHES; touchIndex++) {\n            let touch = touches[touchIndex];\n            gameAPI.setTouchInput(touchIndex, touch.active, touch.touchState.down, touch.touchState.justPressed, touch.x, touch.y, touch.radiusX, touch.radiusY);\n        }\n\n        gameAPI.onFrameStart();\n        gameAPI.updateGame(dt);\n        gameAPI.renderGame();\n\n        if (webAudio.started) {\n            webAudio.updateAudio(gameAPI, memory);\n        }\n\n        gameAPI.onFrameEnd();\n\n        requestAnimationFrame(update);\n    }\n\n    resize();\n    update();\n}\n\nmain();\n","\nlet sprite_vertex_source = `\nstruct screen_dims {\n    float width;\n    float height;\n};\nuniform screen_dims screenDims;\n\nattribute vec3 pos;\nattribute vec2 texCoords;\nattribute vec4 color;\nattribute float textureID;\n\nvarying vec2 vTexCoords;\nvarying vec4 vColor;\nvarying float vTextureID;\n\nvoid main() {\n    gl_Position = vec4(pos.x * (1.0 / screenDims.width) * 2.0 - 1.0,\n                    pos.y * (1.0 / screenDims.height) * 2.0 - 1.0,\n                    -1.0, 1.0);\n    gl_Position.y = -gl_Position.y;\n    vTexCoords = texCoords;\n    vColor = color;\n    vTextureID = textureID;\n}`;\n\n\nlet sprite_fragment_source = `\n#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\n\nuniform sampler2D texture0;\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D texture3;\nuniform sampler2D texture4;\nuniform sampler2D texture5;\nuniform sampler2D texture6;\nuniform sampler2D texture7;\n\nuniform vec2 texture0Size;\nuniform vec2 texture1Size;\nuniform vec2 texture2Size;\nuniform vec2 texture3Size;\nuniform vec2 texture4Size;\nuniform vec2 texture5Size;\nuniform vec2 texture6Size;\nuniform vec2 texture7Size;\n\nvarying vec2 vTexCoords;\nvarying vec4 vColor;\nvarying float vTextureID;\n\nvoid main() {\n    vec4 baseColor;\n\n    vec2 texSize;\n    vec2 uv = vTexCoords;\n\n    if (vTextureID < 0.5) {\n        texSize = texture0Size;\n    }\n    else if (vTextureID >= 0.5 && vTextureID < 1.5) {\n        texSize = texture1Size;\n    }\n    else if (vTextureID >= 1.5 && vTextureID < 2.5) {\n        texSize = texture2Size;\n    }\n    else if (vTextureID >= 2.5 && vTextureID < 3.5) {\n        texSize = texture3Size;\n    }\n    else if (vTextureID >= 3.5 && vTextureID < 4.5) {\n        texSize = texture4Size;\n    }\n    else if (vTextureID >= 4.5 && vTextureID < 5.5) {\n        texSize = texture5Size;\n    }\n    else if (vTextureID >= 5.5 && vTextureID < 6.5) {\n        texSize = texture6Size;\n    }\n    else {\n        texSize = texture7Size;\n    }\n\n    uv *= texSize;\n    vec2 seam = floor(uv + 0.5);\n    vec2 dudv = fwidth(uv);\n    uv = seam + clamp((uv - seam) / dudv, -0.5, 0.5);\n    uv /= texSize;\n\n    if (vTextureID < 0.5) {\n        baseColor = texture2D(texture0, uv);\n    }\n    else if (vTextureID >= 0.5 && vTextureID < 1.5) {\n        baseColor = texture2D(texture1, uv);\n    }\n    else if (vTextureID >= 1.5 && vTextureID < 2.5) {\n        baseColor = texture2D(texture2, uv);\n    }\n    else if (vTextureID >= 2.5 && vTextureID < 3.5) {\n        baseColor = texture2D(texture3, uv);\n    }\n    else if (vTextureID >= 3.5 && vTextureID < 4.5) {\n        baseColor = texture2D(texture4, uv);\n    }\n    else if (vTextureID >= 4.5 && vTextureID < 5.5) {\n        baseColor = texture2D(texture5, uv);\n    }\n    else if (vTextureID >= 5.5 && vTextureID < 6.5) {\n        baseColor = texture2D(texture6, uv);\n    }\n    else {\n        baseColor = texture2D(texture7, uv);\n    }\n\n    gl_FragColor = baseColor * vColor;\n}`;\n\n"]}